import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function main() {
  try {
    // Chemin vers le fichier de donn√©es source
    const sourcePath = path.join(__dirname, '../src/data/grammarData.ts');
    // Chemin vers le fichier de sortie (cr√©ation d'une copie de sauvegarde)
    const backupPath = path.join(__dirname, '../src/data/grammarData.backup.ts');
    
    // 1. Faire une copie de sauvegarde du fichier original
    await fs.copyFile(sourcePath, backupPath);
    console.log('‚úÖ Copie de sauvegarde cr√©√©e :', backupPath);
    
    // 2. Lire le contenu du fichier source
    let content = await fs.readFile(sourcePath, 'utf8');
    
    // 3. Compter le nombre d'entr√©es
    const entries = content.match(/\{\s*word:/g) || [];
    const entryCount = entries.length;
    console.log(`üîç ${entryCount} entr√©es trouv√©es dans le fichier.`);
    
    if (entryCount === 0) {
      console.log('‚ùå Aucune entr√©e trouv√©e. V√©rifiez le format du fichier.');
      return;
    }
    
    // 4. Ajouter un ID √† chaque entr√©e
    let modifiedContent = content;
    let entryId = 1;
    
    console.log('üîÑ Ajout des IDs aux entr√©es...');
    modifiedContent = modifiedContent.replace(
      /\{\s*word:/g, 
      () => `{\n    id: 'entry-${entryId++}',\n    word:`
    );

    // 5. √âcrire le contenu modifi√© dans le fichier source
    await fs.writeFile(sourcePath, modifiedContent, 'utf8');
    
    console.log(`‚úÖ ${entryCount} entr√©es mises √† jour avec des IDs uniques.`);
    console.log(`üìÅ Fichier principal mis √† jour : ${sourcePath}`);
    console.log('\nüìù Note : Une copie de sauvegarde a √©t√© cr√©√©e au cas o√π :', backupPath);
    
  } catch (error) {
    console.error('‚ùå Une erreur est survenue :', error);
    process.exit(1);
  }
}

// Ex√©cuter la fonction principale
main().catch(error => {
  console.error('‚ùå Erreur non g√©r√©e :', error);
  process.exit(1);
});
